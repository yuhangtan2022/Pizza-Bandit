<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="help.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        Qk1WHAAAAAAAADYAAAAoAAAAMAAAADIAAAABABgAAAAAAAAAAADDDgAAww4AAAAAAAAAAAAAIx4uIx4u
        Ix4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4u
        Ix4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4u
        Ix4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4u
        Ix4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4u
        Ix4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4u
        Ix4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4u
        Ix4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4u
        Ix4uIx4uIx4uIx4uIh0tIh0uIx0uIx0uIx0uIx0uIx0uIx0uIx0uIx0uIx0uIx0uIx0uIx0uIx0uIx0u
        Ix0uIx0uIx0uIx0uIx0uIx0uIx0uIx0uIx0uIx0uIx0uIx0uIx0uIx0uIx0uIx0uIx0uIh0uIx4uIx4u
        Ix4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIRwsDw0VDAoQCAcNBgQLBgQLBgQLBgQLBgQL
        BgQLBgQLBgQLBgQLBgQLBgQLBgQLBgQLBgQLBgQLBgQLBQQKBAMJBQQKBgQLBgQLBgQLBgQLBgQLBgQL
        BgQLBgQLBgQLBgQLBgQLBQQKBwYMFxQiIBssIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIBsq
        AQEEAAAAHhscODA1NS4zNS4zNS4zNS4zNS4zNS4zNS4zNS4zNS4zNS4zNS4zNS4zNS4zNS4zNS4zODA2
        QzpBODA2NS4yNS4zNS4zNS4zNS4zNS4zNS4zNS4zNS4zNS4zNS4zNS4zNS80QjpEQDdFHxorIx4uIx4u
        Ix4uIx4uIx4uIx4uIx4uIx4uIx4uIBwrAgEEBwcIWU5ZcGJtbV9rbF9qbWBrbmBsbmBsbmBsbmBsbmBs
        bmBsbmBsbmBsbmBsbmBsbmBsbmBsbmBrbmFsbWBrbV9rbF9qbmBrbmBsbmBsbmBsbmBsbmBsbmBsbmBs
        bmBsbmBsbmBrbV9qdGZwGhYnIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIBwrAQEEBwYHV05YbF5p
        al1oX1NePzdFQDhFQDhGQDhGQDhGQDhGQDhGQDhGQDhGQDhGQDhGQDhGQDhGPzdFUkdUa15palxnT0VR
        PjVEQDhGQDhGQDhGQDhGQDhGQDhGQDhGQjlIMSw0LygtXFBac2VwGhYmIx4uIx4uIx4uIx4uIx4uIx4u
        Ix4uIx4uIx4uIBwrAQEEBwYHV05XbF5pbF5paFxmRj1KExAhGBQlGBQlGBQlGBQlGBQlGBQlGBQlGBQl
        GBQlGBQlGBQlFxQkHBgoS0FNbWBrW09cIh4tFxMkGBQlGBQlGBQlGBQlGBQlGBQlGxcpAAACAAAATkRM
        dWZxExAhHBgoHBgoHhoqIh0tIx4uIx4uIx4uIx4uIx4uIBwrAQEEBwYHV05XcWNtMCs6a11pbmBrWk5a
        WU5aWk9aWk9bWk9bWk9bWk9bWk9bWk9bWk9bWk9bWk9bWk9bWU5aV0xYa15pbF5pY1diWE1ZWU5aWk9b
        Wk9bWk9bWk9bWk9bW09cU0pUU0dQZVhjbF5pWE1ZWk9aW1BcSD9LIR0tIh0tIx4uIx4uIx4uIx4uIBwr
        AQEEBwYHV05XdGVwFhMkOzJCaVxmbF9pa11oZ1plaVxnaVxnaVxnaVxnaVxnaVxnaVxnaVxnaVxnaVxn
        aVxnaVxmZlplaFtma15pa15paVxnaFtmaVxnaVxnaVxnaVxnaVxnaFxnaFtmaVxnal1naFtmaVxnbV9q
        Y1ZhJyIxIR0tIx4uIx4uIx4uIx4uIBwrAQEEBwYHV05XdGZwGRUmIBsrODE/cGJtbF5pSUBOLSc2Mis6
        Mis6Mis6Mis6Mis6Mis6Mis6Mis6Mis6Mis6Mis6MSs5MSs6W1BbbF9qZVdjNzE+MCk4Mis6Mis6Mis6
        NC08HhoiGhYYV0xVcWNuKiU0NS48Y1ZiYVRgJiAwIBwsIR0tIh0tIh0tIx4uIBwrAQEEBwYHV05XdGZw
        GhYmIh0tHhkpPDVDbF5qbV9qMSk5IBsrIh0tIh0tIh0tIh0tIh0tIh0tIh0tIh0tIh0tIh0tIh0tIRws
        Ih4tZFdja15oYFRgHxsqIh0tIh0tIh0tJB8wCQgOBQQDUUdPc2VwGRUmJyExYVRgYVRgKSMyIx4uJR8v
        Ix4uIh0tIx4uIBwrAQEEBwYHV05XdGZwGhYmIx4uIh0tHhoqPzZFaVtlb2Jtb2FrcGJtcGJtcmRuc2Vv
        c2Vvc2Vvc2Vvc2Vvc2Vvc2Vwc2Vwc2VwcmRvbF9qbF5pbWBrc2Rvc2Vvc2Vvc2Vvc2Vvdmhzdmh0bF9q
        aVxnc2VvcWNual1oal1ocWNucmRvcmRuS0FOIRwsIx4uIBwrAQEEBwYHV05XdGZwGhYmIx4uIx4uIh0t
        HxsrWklSjbjbb219aFljaVxmXFFdVUpWVktXVktXVkxYV0xZVkpWVElTVElTVElTVElTVElTVElTVElS
        V0tYV0xZV0xZVktXUUdTST9KSkFIY1ZhbF9qU0lVV0xYZ1plZ1plV0xYWE1YbmBrUUdUIx0uIx4uIBwr
        AQEEBwYHV05XdGZwGhYmIx4uIh0tIRwsGhYnV0NLneL/c3aJZ1hiaVtnPTVDIBssIx4uIx4vIhsrGxcg
        GRYeGRYeGRYeGRYeGRYeGRYeGRYeGRYeGhYfGhcfGBUdJCErXFJgPjg/CwsLUEVNc2VvGhYmKCIxYVRg
        YVRgJiEwKyM0cmRuUEZTIx0uIx4uIBwrAQEEBwYHV05XdGZwGhYmIx4uIBsrLCY1LSg0VkNKm97/c3WI
        aFhiaFxmNzA8HhkoIRsqGxYhFxQcFxUcGBUdGBUdGBUdGBUdGBUdFBEZDwwUDQoRDQoRDw0UEhAYEg8X
        UEpSlYiSkoWQfnJ8dmhyFxMkJiEwYVVgYVVgJB8vKiIzc2VvUEZTIx0uIx4uIBwrAQEEBwYHV05XdGZw
        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
        p5qlp5qlp5qlqpynopahJSEqOzlAT0xSBgQM5eToKSIzXlFdYVVgJSAvKiMzc2VvUEZTIx0uIx4uIBsq
        AQEEBgUFVElTdWdyCwkPFBIYFBIYFBIYDQsRU0BHm97/c3WIaFhiaVtmMSoyEhEUGRYdDgwUBAAGlpak
        urzKsK68pZagppmkp5qlp5qlp5qlp5qlp5qlp5qlqJump5qlU0tUAwAIxMHD5eTle3l9i4eSGBMjYVVg
        YlVgJSAvKiMzc2VvUEZTIx0uIx4uIh0tAQADAgEAUkdPbmFsV0xUWk9XWk9YWk9YWE1WYUxTmt3/c3WI
        Z1hiaVxnX1NdWk9XT0VNNjA6bm55oqKwt7jGtbfGq6Gtp5ikppmkp5qlp5qlp5qlp5qlp5qlq52pjoKM
        FRIaEA0VUU5UXFpfWFFXJiExJR8vYlVgYlVgJSAvKiMzc2VvUEZTIx0uIx4uIx4uIRwsJSAuWU1ZbF9q
        a15paFtnaFtnaVxnaFtnZE9Wmdz/c3WIZ1hiaVxnaVxnZlhkeXB8s7PAurzKuLnHtbbEtrfFtrbFrqu5
        p5qmppmkp5qlp5qlp5qlp5qlrqGsaWBpDQsTGBUdExAZEA4VPDM+HRgpJyExYlVgYlVgJSAvKiMzc2Vv
        UEZTIx0uIx4uIx4uIx4uIBwsNCw8ZFdia15oST9NGhcnGhYmFBEiVUJKm97/c3WIaFhiaFtnNzA+CwcY
        kJGgxsjWvr/NwMLPurzJsLC+t7rIsK27ppmlppmkp5qlp5qlp5qlp5qlsaOvR0FJEg8XGBYeGBUcGhYg
        HxsqIh0tJyExYlVgYlVgJSAvKiMzc2VvUEZTIx0uIx4uIx4uIx4uIh0tHxorMCo3bF9qbWBqUUdUGBUl
        FBEiVUJKm97/c3WIaFhiaFtnNzA/Eg4fRkNUZGR0aWl3T01dSUdXS0RUpqOwurvKq6Ovppeippmkp5ql
        p5qlp5qlr6KtZVxmCQgPExEYEg8ZGhUlHBcoGhYnIBwrYFNfYlVgJSAvKiMzc2VvUEZTIx0uIx4uIx4u
        Ix4uIx4uIh0tHhoqNC48aVtnbV9qY1diY1diY05Vmdz/c3WIZ1hiaVxnZlplZVhkYFNfYVRgYlZhXlFc
        X1JdYFNebmJsnZqnubvKrKOvqZynq52oqp2oqp2orZ+qkoaQQTdAQjtCaFtmZllkZVlkZVlkZVlka15p
        YlVgJSAvKiMzc2VvUEZTIx0uIx4uIx4uIx4uIx4uIx4uIh0tHhoqMyw7ZVhjbF9paVxnY05Wmdz/c3WI
        Z1hiaVxnZFhjYlVhYlZhYlVhYlVhYlZhYlZhYlZhX1NeXVBbdmx2lJCckoeSjICMgnWBfHB7Z1tmXFBb
        ZVlkZVlkYlZhYlZhYlZhYlZhYlZhY1ZiV0tYIx4uKiM0c2VvUEZTIx0uIx4uIx4uIx4uIx4uIx4uIx4u
        Ih0tHxorMSs5a15paFtnY05Vmdz/c3WIZ1hiaFtnQjlHKSMzLCY1LCY1LCY1LCY1LCY1LCY1KyU0LCU1
        UERRaFpkYFNfMy07JR8vKCIxKiQzLCY1LCY1LCY1LCY1LCY1LCY1LCY1LCY1LCY1JyIyHRkpKiIzc2Vv
        UEZTIx0uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIh0tHRkpPTREbmBrZU9Xmdz/c3WIZ1hiaFtmRDpHLCU0
        Lic2Lic2Lic2Lic2Lic2Lic2Lic2LSY2LiY2Y1dia15pZFhkLCY0Lic2Lic2Lic2Lic2Lic2Lic2Lic2
        Lic2Lic2Lic2Lic2Lyg3Lyg3Ny89cWNtUEZTIx0uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIh0tHhor
        PjZFZVBXn+T/dnmLa1tlbF9qcGJtc2Vvc2Vvc2Vvc2Vvc2Vvc2Vvc2Vvc2Vvc2VvcmRubWBqbF9pbWBq
        cmRvc2Vvc2Vvc2Vvc2Vvc2Vvc2Vvc2Vvc2Vvc2Vvc2Vvc2Vvc2Vvc2VvcWNub2JsUkdUIh0tIx4uIx4u
        Ix4uIx4uIx4uIx4uIx4uIx4uIx4uIh0tIBssPDA9Y3mWUUtbTUFOTUNQTUNQTUNQTUNQTUNQTUNQTUNQ
        TUNQTUNQTUNQTUNQTUNQTUNQTUNQTUNQTUNQTUNQTUNQTUNQTUNQTUNQTUNQTUNQTUNQTUNQTUNQTUNQ
        TUNQTUNQTUNQT0RROjJBIRwtIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIh0tIRwsIBgmIhsr
        Ih0tIh0tIh0tIh0tIh0tIh0tIh0tIh0tIh0tIh0tIh0tIh0tIh0tIh0tIh0tIh0tIh0tIh0tIh0tIh0t
        Ih0tIh0tIh0tIh0tIh0tIh0tIh0tIh0tIh0tIh0tIh0tIh0tIR0tIh0tIx4uIx4uIx4uIx4uIx4uIx4u
        Ix4uIx4uIx4uIx4uIx4uIh0tIh0tIh0tIh0tIh0tIh0tIh0tIh0tIh0tIh0tIh0tIh0tIh0tIh0tIh0t
        Ih0tIh0tIh0tIh0tIh0tIh0tIh0tIh0tIh0tIh0tIh0tIh0tIh0tIh0tIh0tIh0tIh0tIh0tIh0tIh0t
        Ih0tIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4u
        Ix4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4u
        Ix4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4u
        Ix4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4u
        Ix4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4uIx4u
</value>
  </data>
</root>